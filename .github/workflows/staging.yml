name: Deploy to Staging

on:
  push:
    branches:
      - main

jobs:
  staging:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: easygroup

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build backend
        run: cd base-back && ./mvnw --batch-mode --quiet install -Dspring.profiles.active=test -DskipTests=false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: npm ci --no-progress --prefix base-front

      - name: Install Google Chrome
        run: |
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          echo "CHROME_BIN=$(which google-chrome)" >> $GITHUB_ENV

      - name: Run frontend tests in headless mode
        run: |
          npx --prefix base-front ng test --browsers=ChromeHeadless --watch=false --no-progress

      - name: Build frontend
        run: npm run build --prefix base-front

      - name: Setup Tailscale (OAuth)
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no -v pi@raspberrypi.tail06bcb8.ts.net "echo 'SSH OK'"

      - name: Deploy to staging via Tailscale SSH
        run: |
          ssh -o StrictHostKeyChecking=no pi@raspberrypi.tail06bcb8.ts.net "
            cd easy-group &&
            git pull origin main &&
            docker compose --env-file .env.staging -f docker-compose.staging.yml up --build -d
          "
